State 0:
          program ::= * expr
          program ::= * expr ASS variable
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr XOR expr
          expr ::= * BRO expr BRC
          expr ::= * MINUS expr
          expr ::= * NOT expr
          expr ::= * INTEGER
          expr ::= * VAR
          expr ::= * FUN arglist BRC

                         MINUS shift  4
                           NOT shift  3
                           VAR shift  26
                           BRO shift  5
                       INTEGER shift  27
                           FUN shift  2
                       program accept
                          expr shift  14

State 1:
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr XOR expr
          expr ::= * BRO expr BRC
          expr ::= * MINUS expr
          expr ::= * NOT expr
          expr ::= * INTEGER
          expr ::= * VAR
          expr ::= * FUN arglist BRC
     (16) arglist ::= *
          arglist ::= * expr
          arglist ::= * expr COMMA arglist
          arglist ::= expr COMMA * arglist

                         MINUS shift  4
                           NOT shift  3
                           VAR shift  26
                           BRO shift  5
                       INTEGER shift  27
                           FUN shift  2
                          expr shift  15
                       arglist shift  25
                     {default} reduce 16

State 2:
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr XOR expr
          expr ::= * BRO expr BRC
          expr ::= * MINUS expr
          expr ::= * NOT expr
          expr ::= * INTEGER
          expr ::= * VAR
          expr ::= * FUN arglist BRC
          expr ::= FUN * arglist BRC
     (16) arglist ::= *
          arglist ::= * expr
          arglist ::= * expr COMMA arglist

                         MINUS shift  4
                           NOT shift  3
                           VAR shift  26
                           BRO shift  5
                       INTEGER shift  27
                           FUN shift  2
                          expr shift  15
                       arglist shift  22
                     {default} reduce 16

State 3:
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr XOR expr
          expr ::= * BRO expr BRC
          expr ::= * MINUS expr
          expr ::= * NOT expr
          expr ::= NOT * expr
          expr ::= * INTEGER
          expr ::= * VAR
          expr ::= * FUN arglist BRC

                         MINUS shift  4
                           NOT shift  3
                           VAR shift  26
                           BRO shift  5
                       INTEGER shift  27
                           FUN shift  2
                          expr shift  28

State 4:
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr XOR expr
          expr ::= * BRO expr BRC
          expr ::= * MINUS expr
          expr ::= MINUS * expr
          expr ::= * NOT expr
          expr ::= * INTEGER
          expr ::= * VAR
          expr ::= * FUN arglist BRC

                         MINUS shift  4
                           NOT shift  3
                           VAR shift  26
                           BRO shift  5
                       INTEGER shift  27
                           FUN shift  2
                          expr shift  17

State 5:
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr XOR expr
          expr ::= * BRO expr BRC
          expr ::= BRO * expr BRC
          expr ::= * MINUS expr
          expr ::= * NOT expr
          expr ::= * INTEGER
          expr ::= * VAR
          expr ::= * FUN arglist BRC

                         MINUS shift  4
                           NOT shift  3
                           VAR shift  26
                           BRO shift  5
                       INTEGER shift  27
                           FUN shift  2
                          expr shift  16

State 6:
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr XOR expr
          expr ::= expr XOR * expr
          expr ::= * BRO expr BRC
          expr ::= * MINUS expr
          expr ::= * NOT expr
          expr ::= * INTEGER
          expr ::= * VAR
          expr ::= * FUN arglist BRC

                         MINUS shift  4
                           NOT shift  3
                           VAR shift  26
                           BRO shift  5
                       INTEGER shift  27
                           FUN shift  2
                          expr shift  30

State 7:
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= expr OR * expr
          expr ::= * expr XOR expr
          expr ::= * BRO expr BRC
          expr ::= * MINUS expr
          expr ::= * NOT expr
          expr ::= * INTEGER
          expr ::= * VAR
          expr ::= * FUN arglist BRC

                         MINUS shift  4
                           NOT shift  3
                           VAR shift  26
                           BRO shift  5
                       INTEGER shift  27
                           FUN shift  2
                          expr shift  31

State 8:
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr AND expr
          expr ::= expr AND * expr
          expr ::= * expr OR expr
          expr ::= * expr XOR expr
          expr ::= * BRO expr BRC
          expr ::= * MINUS expr
          expr ::= * NOT expr
          expr ::= * INTEGER
          expr ::= * VAR
          expr ::= * FUN arglist BRC

                         MINUS shift  4
                           NOT shift  3
                           VAR shift  26
                           BRO shift  5
                       INTEGER shift  27
                           FUN shift  2
                          expr shift  32

State 9:
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= expr DIVIDE * expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr XOR expr
          expr ::= * BRO expr BRC
          expr ::= * MINUS expr
          expr ::= * NOT expr
          expr ::= * INTEGER
          expr ::= * VAR
          expr ::= * FUN arglist BRC

                         MINUS shift  4
                           NOT shift  3
                           VAR shift  26
                           BRO shift  5
                       INTEGER shift  27
                           FUN shift  2
                          expr shift  20

State 10:
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= expr TIMES * expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr XOR expr
          expr ::= * BRO expr BRC
          expr ::= * MINUS expr
          expr ::= * NOT expr
          expr ::= * INTEGER
          expr ::= * VAR
          expr ::= * FUN arglist BRC

                         MINUS shift  4
                           NOT shift  3
                           VAR shift  26
                           BRO shift  5
                       INTEGER shift  27
                           FUN shift  2
                          expr shift  21

State 11:
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= expr PLUS * expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr XOR expr
          expr ::= * BRO expr BRC
          expr ::= * MINUS expr
          expr ::= * NOT expr
          expr ::= * INTEGER
          expr ::= * VAR
          expr ::= * FUN arglist BRC

                         MINUS shift  4
                           NOT shift  3
                           VAR shift  26
                           BRO shift  5
                       INTEGER shift  27
                           FUN shift  2
                          expr shift  18

State 12:
          expr ::= * expr MINUS expr
          expr ::= expr MINUS * expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr AND expr
          expr ::= * expr OR expr
          expr ::= * expr XOR expr
          expr ::= * BRO expr BRC
          expr ::= * MINUS expr
          expr ::= * NOT expr
          expr ::= * INTEGER
          expr ::= * VAR
          expr ::= * FUN arglist BRC

                         MINUS shift  4
                           NOT shift  3
                           VAR shift  26
                           BRO shift  5
                       INTEGER shift  27
                           FUN shift  2
                          expr shift  19

State 13:
          program ::= expr ASS * variable
          variable ::= * VAR

                           VAR shift  33
                      variable shift  23

State 14:
      (0) program ::= expr *
          program ::= expr * ASS variable
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * XOR expr

                             $ reduce 0
                          PLUS shift  11
                         MINUS shift  12
                        DIVIDE shift  9
                         TIMES shift  10
                           AND shift  8
                            OR shift  7
                           XOR shift  6
                           ASS shift  13

State 15:
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * XOR expr
     (17) arglist ::= expr *
          arglist ::= expr * COMMA arglist

                          PLUS shift  11
                         MINUS shift  12
                        DIVIDE shift  9
                         TIMES shift  10
                           AND shift  8
                            OR shift  7
                           XOR shift  6
                         COMMA shift  1
                     {default} reduce 17

State 16:
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * XOR expr
          expr ::= BRO expr * BRC

                          PLUS shift  11
                         MINUS shift  12
                        DIVIDE shift  9
                         TIMES shift  10
                           AND shift  8
                            OR shift  7
                           XOR shift  6
                           BRC shift  29

State 17:
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * XOR expr
     (11) expr ::= MINUS expr *

                        DIVIDE shift  9
                         TIMES shift  10
                           AND shift  8
                            OR shift  7
                           XOR shift  6
                     {default} reduce 11

State 18:
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
      (4) expr ::= expr PLUS expr *
          expr ::= expr * TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * XOR expr

                        DIVIDE shift  9
                         TIMES shift  10
                           AND shift  8
                            OR shift  7
                           XOR shift  6
                     {default} reduce 4

State 19:
          expr ::= expr * MINUS expr
      (3) expr ::= expr MINUS expr *
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * XOR expr

                        DIVIDE shift  9
                         TIMES shift  10
                           AND shift  8
                            OR shift  7
                           XOR shift  6
                     {default} reduce 3

State 20:
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * DIVIDE expr
      (6) expr ::= expr DIVIDE expr *
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * XOR expr

                           AND shift  8
                            OR shift  7
                           XOR shift  6
                     {default} reduce 6

State 21:
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
      (5) expr ::= expr TIMES expr *
          expr ::= expr * DIVIDE expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * XOR expr

                           AND shift  8
                            OR shift  7
                           XOR shift  6
                     {default} reduce 5

State 22:
          expr ::= FUN arglist * BRC

                           BRC shift  24

State 23:
      (1) program ::= expr ASS variable *

                             $ reduce 1

State 24:
     (15) expr ::= FUN arglist BRC *

                     {default} reduce 15

State 25:
     (18) arglist ::= expr COMMA arglist *

                     {default} reduce 18

State 26:
     (14) expr ::= VAR *

                     {default} reduce 14

State 27:
     (13) expr ::= INTEGER *

                     {default} reduce 13

State 28:
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * XOR expr
     (12) expr ::= NOT expr *

                     {default} reduce 12

State 29:
     (10) expr ::= BRO expr BRC *

                     {default} reduce 10

State 30:
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
          expr ::= expr * XOR expr
      (9) expr ::= expr XOR expr *

                     {default} reduce 9

State 31:
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * AND expr
          expr ::= expr * OR expr
      (8) expr ::= expr OR expr *
          expr ::= expr * XOR expr

                     {default} reduce 8

State 32:
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * AND expr
      (7) expr ::= expr AND expr *
          expr ::= expr * OR expr
          expr ::= expr * XOR expr

                     {default} reduce 7

State 33:
      (2) variable ::= VAR *

                     {default} reduce 2

----------------------------------------------------
Symbols:
    0: $:
    1: PLUS
    2: MINUS
    3: DIVIDE
    4: TIMES
    5: AND
    6: OR
    7: XOR
    8: NOT
    9: ASS
   10: VAR
   11: BRO
   12: BRC
   13: INTEGER
   14: FUN
   15: COMMA
   16: error:
   17: program: MINUS NOT VAR BRO INTEGER FUN
   18: expr: MINUS NOT VAR BRO INTEGER FUN
   19: variable: VAR
   20: arglist: <lambda> MINUS NOT VAR BRO INTEGER FUN
