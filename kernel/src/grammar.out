State 0:
          program ::= * expr
          program ::= * expr ASS variable
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * BRO expr BRC
          expr ::= * INTEGER
          expr ::= * VAR
          expr ::= * FUN arglist BRC

                           VAR shift  18
                           BRO shift  3
                       INTEGER shift  19
                           FUN shift  2
                       program accept
                          expr shift  9

State 1:
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * BRO expr BRC
          expr ::= * INTEGER
          expr ::= * VAR
          expr ::= * FUN arglist BRC
     (11) arglist ::= *
          arglist ::= * expr
          arglist ::= * expr COMMA arglist
          arglist ::= expr COMMA * arglist

                           VAR shift  18
                           BRO shift  3
                       INTEGER shift  19
                           FUN shift  2
                          expr shift  10
                       arglist shift  17
                     {default} reduce 11

State 2:
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * BRO expr BRC
          expr ::= * INTEGER
          expr ::= * VAR
          expr ::= * FUN arglist BRC
          expr ::= FUN * arglist BRC
     (11) arglist ::= *
          arglist ::= * expr
          arglist ::= * expr COMMA arglist

                           VAR shift  18
                           BRO shift  3
                       INTEGER shift  19
                           FUN shift  2
                          expr shift  10
                       arglist shift  14
                     {default} reduce 11

State 3:
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * BRO expr BRC
          expr ::= BRO * expr BRC
          expr ::= * INTEGER
          expr ::= * VAR
          expr ::= * FUN arglist BRC

                           VAR shift  18
                           BRO shift  3
                       INTEGER shift  19
                           FUN shift  2
                          expr shift  11

State 4:
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= expr DIVIDE * expr
          expr ::= * BRO expr BRC
          expr ::= * INTEGER
          expr ::= * VAR
          expr ::= * FUN arglist BRC

                           VAR shift  18
                           BRO shift  3
                       INTEGER shift  19
                           FUN shift  2
                          expr shift  21

State 5:
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= expr TIMES * expr
          expr ::= * expr DIVIDE expr
          expr ::= * BRO expr BRC
          expr ::= * INTEGER
          expr ::= * VAR
          expr ::= * FUN arglist BRC

                           VAR shift  18
                           BRO shift  3
                       INTEGER shift  19
                           FUN shift  2
                          expr shift  22

State 6:
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= expr PLUS * expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * BRO expr BRC
          expr ::= * INTEGER
          expr ::= * VAR
          expr ::= * FUN arglist BRC

                           VAR shift  18
                           BRO shift  3
                       INTEGER shift  19
                           FUN shift  2
                          expr shift  12

State 7:
          expr ::= * expr MINUS expr
          expr ::= expr MINUS * expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * BRO expr BRC
          expr ::= * INTEGER
          expr ::= * VAR
          expr ::= * FUN arglist BRC

                           VAR shift  18
                           BRO shift  3
                       INTEGER shift  19
                           FUN shift  2
                          expr shift  13

State 8:
          program ::= expr ASS * variable
          variable ::= * VAR

                           VAR shift  23
                      variable shift  15

State 9:
      (0) program ::= expr *
          program ::= expr * ASS variable
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * DIVIDE expr

                             $ reduce 0
                          PLUS shift  6
                         MINUS shift  7
                        DIVIDE shift  4
                         TIMES shift  5
                           ASS shift  8

State 10:
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * DIVIDE expr
     (12) arglist ::= expr *
          arglist ::= expr * COMMA arglist

                          PLUS shift  6
                         MINUS shift  7
                        DIVIDE shift  4
                         TIMES shift  5
                         COMMA shift  1
                     {default} reduce 12

State 11:
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= BRO expr * BRC

                          PLUS shift  6
                         MINUS shift  7
                        DIVIDE shift  4
                         TIMES shift  5
                           BRC shift  20

State 12:
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
      (4) expr ::= expr PLUS expr *
          expr ::= expr * TIMES expr
          expr ::= expr * DIVIDE expr

                        DIVIDE shift  4
                         TIMES shift  5
                     {default} reduce 4

State 13:
          expr ::= expr * MINUS expr
      (3) expr ::= expr MINUS expr *
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * DIVIDE expr

                        DIVIDE shift  4
                         TIMES shift  5
                     {default} reduce 3

State 14:
          expr ::= FUN arglist * BRC

                           BRC shift  16

State 15:
      (1) program ::= expr ASS variable *

                             $ reduce 1

State 16:
     (10) expr ::= FUN arglist BRC *

                     {default} reduce 10

State 17:
     (13) arglist ::= expr COMMA arglist *

                     {default} reduce 13

State 18:
      (9) expr ::= VAR *

                     {default} reduce 9

State 19:
      (8) expr ::= INTEGER *

                     {default} reduce 8

State 20:
      (7) expr ::= BRO expr BRC *

                     {default} reduce 7

State 21:
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * DIVIDE expr
      (6) expr ::= expr DIVIDE expr *

                     {default} reduce 6

State 22:
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
      (5) expr ::= expr TIMES expr *
          expr ::= expr * DIVIDE expr

                     {default} reduce 5

State 23:
      (2) variable ::= VAR *

                     {default} reduce 2

----------------------------------------------------
Symbols:
    0: $:
    1: PLUS
    2: MINUS
    3: DIVIDE
    4: TIMES
    5: ASS
    6: VAR
    7: BRO
    8: BRC
    9: INTEGER
   10: FUN
   11: COMMA
   12: error:
   13: program: VAR BRO INTEGER FUN
   14: expr: VAR BRO INTEGER FUN
   15: variable: VAR
   16: arglist: <lambda> VAR BRO INTEGER FUN
