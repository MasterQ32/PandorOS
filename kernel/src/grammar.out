State 0:
          program ::= * expr
          program ::= * expr ASS variable
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * BRO expr BRC
          expr ::= * INTEGER
          expr ::= * VAR

                           VAR shift  12
                           BRO shift  1
                       INTEGER shift  13
                       program accept
                          expr shift  7

State 1:
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * BRO expr BRC
          expr ::= BRO * expr BRC
          expr ::= * INTEGER
          expr ::= * VAR

                           VAR shift  12
                           BRO shift  1
                       INTEGER shift  13
                          expr shift  8

State 2:
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= expr DIVIDE * expr
          expr ::= * BRO expr BRC
          expr ::= * INTEGER
          expr ::= * VAR

                           VAR shift  12
                           BRO shift  1
                       INTEGER shift  13
                          expr shift  15

State 3:
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= expr TIMES * expr
          expr ::= * expr DIVIDE expr
          expr ::= * BRO expr BRC
          expr ::= * INTEGER
          expr ::= * VAR

                           VAR shift  12
                           BRO shift  1
                       INTEGER shift  13
                          expr shift  16

State 4:
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= expr PLUS * expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * BRO expr BRC
          expr ::= * INTEGER
          expr ::= * VAR

                           VAR shift  12
                           BRO shift  1
                       INTEGER shift  13
                          expr shift  9

State 5:
          expr ::= * expr MINUS expr
          expr ::= expr MINUS * expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * BRO expr BRC
          expr ::= * INTEGER
          expr ::= * VAR

                           VAR shift  12
                           BRO shift  1
                       INTEGER shift  13
                          expr shift  10

State 6:
          program ::= expr ASS * variable
          variable ::= * VAR

                           VAR shift  17
                      variable shift  11

State 7:
      (0) program ::= expr *
          program ::= expr * ASS variable
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * DIVIDE expr

                             $ reduce 0
                          PLUS shift  4
                         MINUS shift  5
                        DIVIDE shift  2
                         TIMES shift  3
                           ASS shift  6

State 8:
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= BRO expr * BRC

                          PLUS shift  4
                         MINUS shift  5
                        DIVIDE shift  2
                         TIMES shift  3
                           BRC shift  14

State 9:
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
      (4) expr ::= expr PLUS expr *
          expr ::= expr * TIMES expr
          expr ::= expr * DIVIDE expr

                        DIVIDE shift  2
                         TIMES shift  3
                     {default} reduce 4

State 10:
          expr ::= expr * MINUS expr
      (3) expr ::= expr MINUS expr *
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * DIVIDE expr

                        DIVIDE shift  2
                         TIMES shift  3
                     {default} reduce 3

State 11:
      (1) program ::= expr ASS variable *

                             $ reduce 1

State 12:
      (9) expr ::= VAR *

                     {default} reduce 9

State 13:
      (8) expr ::= INTEGER *

                     {default} reduce 8

State 14:
      (7) expr ::= BRO expr BRC *

                     {default} reduce 7

State 15:
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * DIVIDE expr
      (6) expr ::= expr DIVIDE expr *

                     {default} reduce 6

State 16:
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
      (5) expr ::= expr TIMES expr *
          expr ::= expr * DIVIDE expr

                     {default} reduce 5

State 17:
      (2) variable ::= VAR *

                     {default} reduce 2

----------------------------------------------------
Symbols:
    0: $:
    1: PLUS
    2: MINUS
    3: DIVIDE
    4: TIMES
    5: ASS
    6: VAR
    7: BRO
    8: BRC
    9: INTEGER
   10: error:
   11: program: VAR BRO INTEGER
   12: expr: VAR BRO INTEGER
   13: variable: VAR
