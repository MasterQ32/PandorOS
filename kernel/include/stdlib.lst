FUNCTION(Abs, "Abs(x)", "Returns x as a positive value.",
{
	assert_argc(argc, 1);
	number_t num = basic_getnum(argv[0]);
	if(num < 0)
		return basic_mknum(-num);
	else
		return basic_mknum(num);
})

FUNCTION(Print, "Print(...)", "Prints its arguments and adds a newline.",
{
	for(int i = 0; i < argc; i++)
	{
		printf("%v", argv[i]);
	}
	printf("\n");
	return basic_mknull();
})

FUNCTION(Sum, "Sum(...)", "Sums up all arguments.",
{
	number_t sum = 0;
	for(int i = 0; i < argc; i++)
	{
		sum += basic_getnum(argv[i]);
	}
	return basic_mknum(sum);
})

FUNCTION(Product, "Product(...)", "Multiplies all arguments.",
{
	number_t sum = 1;
	for(int i = 0; i < argc; i++)
	{
		sum *= basic_getnum(argv[i]);
	}
	return basic_mknum(sum);
})